 activate_all_roles_on_login **           Whether to enable automatic activation of all granted roles           when users log in to the server: ** OFF 
 authentication_windows_log_level **           This variable is available only if the           authentication_windows Windows           authentication plugin is enabled and debugging code is           enabled. See           Section 6.5.1.6,  Windows Pluggable Authentication .         ** 2 
 authentication_windows_use_principal_name **           This variable is available only if the           authentication_windows Windows           authentication plugin is enabled. See           Section 6.5.1.6,  Windows Pluggable Authentication .         ** ON 
 autocommit **           The autocommit mode. If set to 1, all changes to a table take           effect immediately. If set to 0, you must use           COMMIT to accept a transaction           or ROLLBACK           to cancel it. If autocommit           is 0 and you change it to 1, MySQL performs an automatic           COMMIT of any open transaction.           Another way to begin a transaction is to use a           START           TRANSACTION or           BEGIN           statement. See Section 13.3.1,  START TRANSACTION, COMMIT, and ROLLBACK Syntax .         ** ON 
 automatic_sp_privileges **           When this variable has a value of 1 (the default), the server           automatically grants the           EXECUTE and           ALTER ROUTINE privileges to the           creator of a stomecab_rc_file routine, if the user cannot already           execute and alter or drop the routine. (The           ALTER ROUTINE privilege is           required to drop the routine.) The server also automatically           drops those privileges from the creator when the routine is           dropped. If           automatic_sp_privileges is 0,           the server does not automatically add or drop these           privileges.         ** TRUE 
 auto_generate_certs **           This variable is available if the server was compiled using           OpenSSL (see Section 6.4.4,  OpenSSL Versus wolfSSL ). It controls           whether the server autogenerates SSL key and certificate files           in the data directory, if they do not already exist.         ** ON 
 avoid_temporal_upgrade **           This variable controls whether ALTER           TABLE implicitly upgrades temporal columns found to           be in pre-5.6.4 format (TIME,           DATETIME, and           TIMESTAMP columns without           support for fractional seconds precision). Upgrading such           columns requires a table rebuild, which prevents any use of           fast alterations that might otherwise apply to the operation           to be performed.         ** OFF 
 back_log **           The number of outstanding connection requests MySQL can have.           This comes into play when the main MySQL thread gets very many           connection requests in a very short time. It then takes some           time (although very little) for the main thread to check the           connection and start a new thread. The           back_log value indicates how           many requests can be stacked during this short time before           MySQL momentarily stops answering new requests. You need to           increase this only if you expect a large number of connections           in a short period of time.         ** -1 (signifies autosizing; do not assign this literal value) 
 basedir **           The path to the MySQL installation base directory.         ** (>= 8.0.2) parent of mysqld installation directory 
 big_tables **           If set to 1, all temporary tables are stored on disk rather           than in memory. This is a little slower, but the error           The table tbl_name is           full does not occur for           SELECT operations that require           a large temporary table. The default value for a new           connection is 0 (use in-memory temporary tables). Normally,           you should never need to set this variable. When in-memory           internal temporary tables are managed by           the TempTable storage engine (the default),           and the maximum amount of memory that can be occupied by the           TempTable storage engine is exceeded, the           TempTable storage engine starts storing           data to temporary files on disk. When in-memory temporary           tables are managed by the MEMORY storage           engine, in-memory tables are automatically converted to           disk-based tables as required. For more information, see           Section 8.4.4,  Internal Temporary Table Use in MySQL .         ** OFF 
 bind_address **           The value of the --bind-address           option.         ** * 
 block_encryption_mode **           This variable controls the block encryption mode for           block-based algorithms such as AES. It affects encryption for           AES_ENCRYPT() and           AES_DECRYPT().         ** aes-128-ecb 
 bulk_insert_buffer_size ** MyISAM uses a special tree-like cache to           make bulk inserts faster for           INSERT ...           SELECT, INSERT ... VALUES (...), (...),           ..., and           LOAD DATA           INFILE when adding data to nonempty tables. This           variable limits the size of the cache tree in bytes per           thread. Setting it to 0 disables this optimization. The           default value is 8MB.         ** 8388608 
 caching_sha2_password_auto_generate_rsa_keys **           This variable is available if the server was compiled using           OpenSSL (see Section 6.4.4,  OpenSSL Versus wolfSSL ). The server uses           it to determine whether to autogenerate RSA private/public           key-pair files in the data directory if they do not already           exist.         ** ON 
 caching_sha2_password_private_key_path **           This variable specifies the path name of the RSA private key           file for the caching_sha2_password           authentication plugin. If the file is named as a relative           path, it is interpreted relative to the server data directory.           The file must be in PEM format. ** private_key.pem 
 caching_sha2_password_public_key_path **           This variable specifies the path name of the RSA public key           file for the caching_sha2_password           authentication plugin. If the file is named as a relative           path, it is interpreted relative to the server data directory.           The file must be in PEM format.         ** public_key.pem 
 character_set_client **           The character set for statements that arrive from the client.           The session value of this variable is set using the character           set requested by the client when the client connects to the           server. (Many clients support a           --default-character-set option to enable this           character set to be specified explicitly. See also           Section 10.4,  Connection Character Sets and Collations .) The global value of the           variable is used to set the session value in cases when the           client-requested value is unknown or not available, or the           server is configured to ignore client requests: ** (>= 8.0.1) utf8mb4 
 character_set_connection **           The character set used for literals specified without a           character set introducer and for number-to-string conversion.           For information about introducers, see           Section 10.3.8,  Character Set Introducers .         ** (>= 8.0.1) utf8mb4 
 character_set_database **           The character set used by the default database. The server           sets this variable whenever the default database changes. If           there is no default database, the variable has the same value           as character_set_server.         ** (>= 8.0.1) utf8mb4 
 character_set_filesystem **           The file system character set. This variable is used to           interpret string literals that refer to file names, such as in           the LOAD DATA           INFILE and           SELECT ... INTO           OUTFILE statements and the           LOAD_FILE() function. Such file           names are converted from           character_set_client to           character_set_filesystem           before the file opening attempt occurs. The default value is           binary, which means that no conversion           occurs. For systems on which multibyte file names are           permitted, a different value may be more appropriate. For           example, if the system represents file names using UTF-8, set           character_set_filesystem to           'utf8mb4'.         ** binary 
 character_set_results **           The character set used for returning query results to the           client. This includes result data such as column values,           result metadata such as column names, and error messages.         ** (>= 8.0.1) utf8mb4 
 character_set_server **           The server's default character set.         ** (>= 8.0.1) utf8mb4 
 character_set_system **           The character set used by the server for storing identifiers.           The value is always utf8.         ** utf8 
 character_sets_dir **           The directory where character sets are installed.         **N/A
 check_proxy_users **           Some authentication plugins implement proxy user mapping for           themselves (for example, the PAM and Windows authentication           plugins). Other authentication plugins do not support proxy           users by default. Of these, some can request that the MySQL           server itself map proxy users according to granted proxy           privileges: mysql_native_password,           sha256_password.         ** OFF 
 collation_connection **           The collation of the connection character set.           collation_connection is           important for comparisons of literal strings. For comparisons           of strings with column values,           collation_connection does not           matter because columns have their own collation, which has a           higher collation precedence (see           Section 10.8.4,  Collation Coercibility in Expressions ).         **N/A
 collation_database **           The collation used by the default database. The server sets           this variable whenever the default database changes. If there           is no default database, the variable has the same value as           collation_server.         ** (>= 8.0.1) utf8mb4_0900_ai_ci 
 collation_server **           The server's default collation.         ** (>= 8.0.1) utf8mb4_0900_ai_ci 
 completion_type **NO_CHAIN** NO_CHAIN 
 concurrent_insert **NEVER** AUTO 
 connect_timeout **           The number of seconds that the mysqld           server waits for a connect packet before responding with           Bad handshake. The default value is 10           seconds.         ** 10 
 core_file **           Whether to write a core file if the server crashes. This           variable is set by the           --core-file option.         ** OFF 
 cte_max_recursion_depth **           The common table expression (CTE) maximum recursion depth. The           server terminates execution of any CTE that recurses more           levels than the value of this variable. For more information,           see           Limiting Common Table Expression Recursion.         ** 1000 
 datadir **           The path to the MySQL server data directory. Relative paths           are resolved with respect to the current directory. If the           server will be started automatically (that is, in contexts for           which you cannot assume what the current directory will be),           it is best to specify the           datadir value as an absolute           path.         **N/A
 debug **           This variable indicates the current debugging settings. It is           available only for servers built with debugging support. The           initial value comes from the value of instances of the           --debug option given at server           startup. The global and session values may be set at runtime.         ** (Windows) d:t:i:O,\mysqld.trace 
 debug_sync **           This variable is the user interface to the Debug Sync           facility. Use of Debug Sync requires that MySQL be configured           with the -DENABLE_DEBUG_SYNC=1 CMake option (see           Section 2.8.4,  MySQL Source-Configuration Options ). If Debug Sync           is not compiled in, this system variable is not available.         **N/A
 default_authentication_plugin **mysql_native_password** (>= 8.0.4) caching_sha2_password 
 default_collation_for_utf8mb4 **utf8mb4_0900_ai_ci**N/A
 default_password_lifetime **           This variable defines the global automatic password expiration           policy. The default           default_password_lifetime           value is 0, which disables automatic password expiration. If           the value of           default_password_lifetime is           a positive integer N, it indicates           the permitted password lifetime; passwords must be changed           every N days.         ** 0 
 default_storage_engine **           The default storage engine. This variable sets the storage           engine for permanent tables only. To set the storage engine           for TEMPORARY tables, set the           default_tmp_storage_engine           system variable.         ** InnoDB 
 default_tmp_storage_engine **           The default storage engine for TEMPORARY           tables (created with           CREATE TEMPORARY           TABLE). To set the storage engine for permanent           tables, set the           default_storage_engine system           variable. Also see the discussion of that variable regarding           possible values.         ** InnoDB 
 default_week_format **           The default mode value to use for the           WEEK() function. See           Section 12.7,  Date and Time Functions .         ** 0 
 delay_key_write **ON** ON 
 delayed_insert_limit **           This system variable is deprecated (because           DELAYED inserts are not supported), and           will be removed in a future release.         ** 100 
 delayed_insert_timeout **           This system variable is deprecated (because           DELAYED inserts are not supported), and           will be removed in a future release.         ** 300 
 delayed_queue_size **           This system variable is deprecated (because           DELAYED inserts are not supported), and           will be removed in a future release.         ** 1000 
 disabled_storage_engines **           This variable indicates which storage engines cannot be used           to create tables or tablespaces. For example, to prevent new           MyISAM or FEDERATED           tables from being created, start the server with these lines           in the server option file:         ** empty string 
 disconnect_on_expired_password **           This variable controls how the server handles clients with           expired passwords: ** ON 
 div_precision_increment **           This variable indicates the number of digits by which to           increase the scale of the result of division operations           performed with the           / operator.           The default value is 4. The minimum and maximum values are 0           and 30, respectively. The following example illustrates the           effect of increasing the default value.         ** 4 
 dragnet.log_error_filter_rules **           The filter rules that control operation of the           log_filter_dragnet error log filter           component. If log_filter_dragnet is not           installed,           dragnet.log_error_filter_rules           is unavailable. If log_filter_dragnet is           installed but not enabled, changes to           dragnet.log_error_filter_rules           have no effect.         ** IF prio>=INFORMATION THEN drop. IF EXISTS source_line THEN unset source_line. 
 end_markers_in_json **           Whether optimizer JSON output should add end markers. See           MySQL           Internals: The end_markers_in_json System Variable.         ** OFF 
 eq_range_index_dive_limit **           This variable indicates the number of equality ranges in an           equality comparison condition when the optimizer should switch           from using index dives to index statistics in estimating the           number of qualifying rows. It applies to evaluation of           expressions that have either of these equivalent forms, where           the optimizer uses a nonunique index to look up           col_name values:         ** 200 
 event_scheduler **ON** (>= 8.0.3) ON 
 explicit_defaults_for_timestamp **           This system variable determines whether the server enables           certain nonstandard behaviors for default values and           NULL-value handling in           TIMESTAMP columns. By default,           explicit_defaults_for_timestamp           is enabled, which disables the nonstandard behaviors.           Disabling           explicit_defaults_for_timestamp           results in a warning.         ** (>= 8.0.2) ON 
 external_user **           The external user name used during the authentication process,           as set by the plugin used to authenticate the client. With           native (built-in) MySQL authentication, or if the plugin does           not set the value, this variable is NULL.           See Section 6.3.11,  Proxy Users .         **N/A
 flush **           If ON, the server flushes (synchronizes)           all changes to disk after each SQL statement. Normally, MySQL           does a write of all changes to disk only after each SQL           statement and lets the operating system handle the           synchronizing to disk. See Section B.5.3.3,  What to Do If MySQL Keeps Crashing . This           variable is set to ON if you start           mysqld with the           --flush option. ** OFF 
 flush_time **           If this is set to a nonzero value, all tables are closed every           flush_time seconds to free up           resources and synchronize unflushed data to disk. This option           is best used only on systems with minimal resources. ** 0 
 foreign_key_checks **           If set to 1 (the default), foreign key constraints for           InnoDB tables are checked. If set to 0,           foreign key constraints are ignored, with a couple of           exceptions. When re-creating a table that was dropped, an           error is returned if the table definition does not conform to           the foreign key constraints referencing the table. Likewise,           an ALTER TABLE operation           returns an error if a foreign key definition is incorrectly           formed. For more information, see           Section 13.1.18.6,  Using FOREIGN KEY Constraints .         ** ON 
 ft_boolean_syntax **           The list of operators supported by boolean full-text searches           performed using IN BOOLEAN MODE. See           Section 12.9.2,  Boolean Full-Text Searches .         ** + -><()~*:""&| 
 ft_max_word_len **           The maximum length of the word to be included in a           MyISAM FULLTEXT index. **N/A
 ft_min_word_len **           The minimum length of the word to be included in a           MyISAM FULLTEXT index. ** 4 
 ft_query_expansion_limit **           The number of top matches to use for full-text searches           performed using WITH QUERY EXPANSION.         ** 20 
 ft_stopword_file **           The file from which to read the list of stopwords for           full-text searches on MyISAM tables. The           server looks for the file in the data directory unless an           absolute path name is given to specify a different directory.           All the words from the file are used; comments are           not honored. By default, a built-in list           of stopwords is used (as defined in the           storage/myisam/ft_static.c file). Setting           this variable to the empty string ('')           disables stopword filtering. See also           Section 12.9.4,  Full-Text Stopwords . **N/A
 general_log **           Whether the general query log is enabled. The value can be 0           (or OFF) to disable the log or 1 (or           ON) to enable the log. The default value           depends on whether the           --general_log option is given.           The destination for log output is controlled by the           log_output system variable;           if that value is NONE, no log entries are           written even if the log is enabled.         ** OFF 
 general_log_file **           The name of the general query log file. The default value is           host_name.log,           but the initial value can be changed with the           --general_log_file option.         ** host_name.log 
 group_concat_max_len **           The maximum permitted result length in bytes for the           GROUP_CONCAT() function. The           default is 1024.         ** 1024 
 have_statement_timeout **           Whether the statement execution timeout feature is available           (see Statement Execution Time Optimizer Hints). The           value can be NO if the background thread           used by this feature could not be initialized.         **N/A
 histogram_generation_max_mem_size **           The maximum amount of memory available for generating           histogram statistics. See           Section 8.9.6,  Optimizer Statistics , and           Section 13.7.3.1,  ANALYZE TABLE Syntax .         ** 20000000 
 host_cache_size **           The size of the internal host cache (see           Section 8.12.4.2,  DNS Lookup Optimization and the Host Cache ). Setting the size to 0 disables           the host cache. Changing the cache size at runtime implicitly           causes a FLUSH HOSTS operation           to clear the host cache and truncate the           host_cache table.         ** -1 (signifies autosizing; do not assign this literal value) 
 hostname **           The server sets this variable to the server host name at           startup.         **N/A
 init_connect **           A string to be executed by the server for each client that           connects. The string consists of one or more SQL statements,           separated by semicolon characters. For example, each client           session begins by default with autocommit mode enabled. For           older servers (before MySQL 5.5.8), there is no global           autocommit system variable to           specify that autocommit should be disabled by default, but as           a workaround init_connect can           be used to achieve the same effect:         **N/A
 information_schema_stats_expiry **           Some INFORMATION_SCHEMA tables contain           columns that provide table statistics:         ** 86400 
 init_file **           The name of the file specified with the           --init-file option when you           start the server. This should be a file containing SQL           statements that you want the server to execute when it starts.           Each statement must be on a single line and should not include           comments. For more information, see the description of           --init-file.         **N/A
 interactive_timeout **           The number of seconds the server waits for activity on an           interactive connection before closing it. An interactive           client is defined as a client that uses the           CLIENT_INTERACTIVE option to           mysql_real_connect(). See also           wait_timeout.         ** 28800 
 internal_tmp_disk_storage_engine **MYISAM** INNODB 
 internal_tmp_mem_storage_engine **TempTable** TempTable 
 join_buffer_size **           The minimum size of the buffer that is used for plain index           scans, range index scans, and joins that do not use indexes           and thus perform full table scans. Normally, the best way to           get fast joins is to add indexes. Increase the value of           join_buffer_size to get a           faster full join when adding indexes is not possible. One join           buffer is allocated for each full join between two tables. For           a complex join between several tables for which indexes are           not used, multiple join buffers might be necessary.         ** 262144 
 keep_files_on_create **           If a MyISAM table is created with no           DATA DIRECTORY option, the           .MYD file is created in the database           directory. By default, if MyISAM finds an           existing .MYD file in this case, it           overwrites it. The same applies to .MYI           files for tables created with no INDEX           DIRECTORY option. To suppress this behavior, set the           keep_files_on_create variable           to ON (1), in which case           MyISAM will not overwrite existing files           and returns an error instead. The default value is           OFF (0).         ** OFF 
 key_buffer_size **           Index blocks for MyISAM tables are buffered           and are shared by all threads.           key_buffer_size is the size           of the buffer used for index blocks. The key buffer is also           known as the key cache.         ** 8388608 
 key_cache_age_threshold **           This value controls the demotion of buffers from the hot           sublist of a key cache to the warm sublist. Lower values cause           demotion to happen more quickly. The minimum value is 100. The           default value is 300. See Section 8.10.2,  The MyISAM Key Cache .         ** 300 
 key_cache_block_size **           The size in bytes of blocks in the key cache. The default           value is 1024. See Section 8.10.2,  The MyISAM Key Cache .         ** 1024 
 key_cache_division_limit **           The division point between the hot and warm sublists of the           key cache buffer list. The value is the percentage of the           buffer list to use for the warm sublist. Permissible values           range from 1 to 100. The default value is 100. See           Section 8.10.2,  The MyISAM Key Cache .         ** 100 
 large_files_support **           Whether mysqld was compiled with options           for large file support.         **N/A
 large_pages **           Whether large page support is enabled (via the           --large-pages option). See           Section 8.12.3.2,  Enabling Large Page Support .         ** FALSE 
 large_page_size **           If large page support is enabled, this shows the size of           memory pages. Large memory pages are supported only on Linux;           on other platforms, the value of this variable is always 0.           See Section 8.12.3.2,  Enabling Large Page Support .         ** 0 
 lc_messages **           The locale to use for error messages. The default is           en_US. The server converts the argument to           a language name and combines it with the value of           lc_messages_dir to produce           the location for the error message file. See           Section 10.11,  Setting the Error Message Language .         ** en_US 
 lc_messages_dir **           The directory where error messages are located. The server           uses the value together with the value of           lc_messages to produce the           location for the error message file. See           Section 10.11,  Setting the Error Message Language .         **N/A
 lc_time_names **           This variable specifies the locale that controls the language           used to display day and month names and abbreviations. This           variable affects the output from the           DATE_FORMAT(),           DAYNAME() and           MONTHNAME() functions. Locale           names are POSIX-style values such as           'ja_JP' or 'pt_BR'. The           default value is 'en_US' regardless of your           system's locale setting. For further information, see           Section 10.15,  MySQL Server Locale Support .         **N/A
 license **           The type of license the server has.         ** GPL 
 local_infile **           This variable controls server-side LOCAL           capability for LOAD DATA           statements. Depending on the           local_infile setting, the           server refuses or permits local data loading by clients that           have LOCAL enabled on the client side.         ** (>= 8.0.2) OFF 
 lock_wait_timeout **           This variable specifies the timeout in seconds for attempts to           acquire metadata locks. The permissible values range from 1 to           31536000 (1 year). The default is 31536000.         ** 31536000 
 locked_in_memory **           Whether mysqld was locked in memory with           --memlock.         **N/A
 log_error **           The default error log destination. If the destination is the           console, the value is stderr. Otherwise,           the destination is a file and the           log_error value is the file           name. See Section 5.4.2,  The Error Log .         **N/A
 log_error_filter_rules **           The filter rules for error logging. This variable is unused.           It was removed in MySQL 8.0.4.         ** set by server 
 log_error_services **           The components to enable for error logging. The variable may           contain a list with 0, 1, or many elements. In the latter           case, elements may be delimited by semicolon or (as of MySQL           8.0.12) comma, optionally followed by space. A given setting           cannot use both semicolon and comma separators. Component           order is significant because the server executes components in           the order listed. Any loadable (not built in) component named           in the log_error_services           value must first be installed with           INSTALL COMPONENT. For more           information, see           Section 5.4.2.1,  Error Log Component Configuration .         ** log_filter_internal; log_sink_internal 
 log_error_suppression_list **           This variable enables specifying which diagnostics should not           be written to the error log when they occur with a severity of           WARNING or INFORMATION.           For example, if a particular type of warning occurs frequently           but is not of interest (and thus may be considered undesirable            noise  in the error log), it can be suppressed.         ** empty string 
 log_error_verbosity **           The verbosity for handling events intended for the error log,           as filtered by the log_filter_internal           error log filter component, which is enabled by default. If           log_filter_internal is disabled,           log_error_verbosity has no           effect.         ** (>= 8.0.4) 2 
 log_output **TABLE** FILE 
 log_queries_not_using_indexes **           Whether queries that do not use indexes are logged to the slow           query log. See Section 5.4.5,  The Slow Query Log .         ** OFF 
 log_slow_admin_statements **           Include slow administrative statements in the statements           written to the slow query log. Administrative statements           include ALTER TABLE,           ANALYZE TABLE,           CHECK TABLE,           CREATE INDEX,           DROP INDEX,           OPTIMIZE TABLE, and           REPAIR TABLE.         ** OFF 
 log_syslog **           Prior to MySQL 8.0, this variable controlled           whether to perform error logging to the system log (the Event           Log on Windows, and syslog on Unix and           Unix-like systems).         ** (Windows, <= 8.0.1) ON 
 log_syslog_facility **           This variable was removed in MySQL 8.0.13 and replaced by           syseventlog.facility.         ** daemon 
 log_syslog_include_pid **           This variable was removed in MySQL 8.0.13 and replaced by           syseventlog.include_pid.         ** ON 
 log_syslog_tag **           This variable was removed in MySQL 8.0.13 and replaced by           syseventlog.tag.         ** empty string 
 log_timestamps **UTC** UTC 
 log_throttle_queries_not_using_indexes **           If           log_queries_not_using_indexes           is enabled, the           log_throttle_queries_not_using_indexes           variable limits the number of such queries per minute that can           be written to the slow query log. A value of 0 (the default)           means  no limit . For more information, see           Section 5.4.5,  The Slow Query Log .         ** 0 
 log_warnings **           This system variable was removed in MySQL 8.0.3. Use the           log_error_verbosity system           variable instead.         ** 2 
 long_query_time **           If a query takes longer than this many seconds, the server           increments the Slow_queries           status variable. If the slow query log is enabled, the query           is logged to the slow query log file. This value is measured           in real time, not CPU time, so a query that is under the           threshold on a lightly loaded system might be above the           threshold on a heavily loaded one. The minimum and default           values of long_query_time are           0 and 10, respectively. The value can be specified to a           resolution of microseconds. For logging to a file, times are           written including the microseconds part. For logging to           tables, only integer times are written; the microseconds part           is ignored. See Section 5.4.5,  The Slow Query Log .         ** 10 
 low_priority_updates **           If set to 1, all           INSERT,           UPDATE,           DELETE, and LOCK TABLE           WRITE statements wait until there is no pending           SELECT or LOCK TABLE           READ on the affected table. This affects only           storage engines that use only table-level locking (such as           MyISAM, MEMORY, and           MERGE).         ** FALSE 
 lower_case_file_system **           This variable describes the case sensitivity of file names on           the file system where the data directory is located.           OFF means file names are case-sensitive,           ON means they are not case-sensitive. This           variable is read only because it reflects a file system           attribute and setting it would have no effect on the file           system.         **N/A
 lower_case_table_names **           If set to 0, table names are stored as specified and           comparisons are case-sensitive. If set to 1, table names are           stored in lowercase on disk and comparisons are not case           sensitive. If set to 2, table names are stored as given but           compared in lowercase. This option also applies to database           names and table aliases. For additional details, see           Section 9.2.2,  Identifier Case Sensitivity .         ** 0 
 mandatory_roles **           Roles the server should treat as mandatory. In effect, these           roles are automatically granted to every user, although           setting mandatory_roles does           not actually change any user accounts, and the granted roles           are not visible in the mysql.role_edges           system table.         ** empty string 
 max_allowed_packet **           The maximum size of one packet or any generated/intermediate           string, or any parameter sent by the           mysql_stmt_send_long_data() C           API function. The default is 64MB.         ** (>= 8.0.3) 67108864 
 max_connect_errors **           If more than this many successive connection requests from a           host are interrupted without a successful connection, the           server blocks that host from further connections. You can           unblock blocked hosts by flushing the host cache. To do so,           issue a FLUSH HOSTS statement           or execute a mysqladmin flush-hosts           command. If a connection is established successfully within           fewer than max_connect_errors           attempts after a previous connection was interrupted, the           error count for the host is cleared to zero. However, once a           host is blocked, flushing the host cache is the only way to           unblock it. The default is 100.         ** 100 
 max_connections **           The maximum permitted number of simultaneous client           connections. By default, this is 151. See           Section B.5.2.6,  Too many connections , for more information.         ** 151 
 max_delayed_threads **           This system variable is deprecated (because           DELAYED inserts are not supported), and           will be removed in a future release.         ** 20 
 max_digest_length **           The maximum number of bytes available for computing normalized           statement digests. Once that amount of space is used during           digest computation, truncation occurs: no further tokens from           a parsed statement are collected or figure into its digest           value. Statements that differ only after that many bytes of           parsed tokens produce the same normalized statement digest and           are considered identical if compared or if aggregated for           digest statistics.         ** 1024 
 max_error_count **           The maximum number of error, warning, and information messages           to be stored for display by the SHOW           ERRORS and SHOW           WARNINGS statements. This is the same as the number           of condition areas in the diagnostics area, and thus the           number of conditions that can be inspected by           GET DIAGNOSTICS.         ** (>= 8.0.3) 1024 
 max_execution_time **           The execution timeout for           SELECT statements, in           milliseconds. If the value is 0, timeouts are not enabled.         ** 0 
 max_heap_table_size **           This variable sets the maximum size to which user-created           MEMORY tables are permitted to grow. The           value of the variable is used to calculate           MEMORY table MAX_ROWS           values. Setting this variable has no effect on any existing           MEMORY table, unless the table is           re-created with a statement such as           CREATE TABLE or altered with           ALTER TABLE or           TRUNCATE TABLE. A server           restart also sets the maximum size of existing           MEMORY tables to the global           max_heap_table_size value.         ** 16777216 
 max_insert_delayed_threads **           This variable is a synonym for           max_delayed_threads.         **N/A
 max_join_size **           Do not permit statements that probably need to examine more           than max_join_size rows (for           single-table statements) or row combinations (for           multiple-table statements) or that are likely to do more than           max_join_size disk seeks. By           setting this value, you can catch statements where keys are           not used properly and that would probably take a long time.           Set it if your users tend to perform joins that lack a           WHERE clause, that take a long time, or           that return millions of rows.         ** 18446744073709551615 
 max_length_for_sort_data **           The cutoff on the size of index values that determines which           filesort algorithm to use. See           Section 8.2.1.14,  ORDER BY Optimization .         ** (>= 8.0.1) 4096 
 max_points_in_geometry **           The maximum value of the           points_per_circle argument to the           ST_Buffer_Strategy() function.         ** 65536 
 max_prepared_stmt_count **           This variable limits the total number of prepared statements           in the server. It can be used in environments where there is           the potential for denial-of-service attacks based on running           the server out of memory by preparing huge numbers of           statements. If the value is set lower than the current number           of prepared statements, existing statements are not affected           and can be used, but no new statements can be prepared until           the current number drops below the limit. The default value is           16,382. The permissible range of values is from 0 to 1           million. Setting the value to 0 disables prepared statements.         ** 16382 
 max_seeks_for_key **           Limit the assumed maximum number of seeks when looking up rows           based on a key. The MySQL optimizer assumes that no more than           this number of key seeks are required when searching for           matching rows in a table by scanning an index, regardless of           the actual cardinality of the index (see           Section 13.7.6.22,  SHOW INDEX Syntax ). By setting this to a low value           (say, 100), you can force MySQL to prefer indexes instead of           table scans.         ** (64-bit platforms) 18446744073709551615 
 max_sort_length **           The number of bytes to use when sorting data values. The           server uses only the first           max_sort_length bytes of each           value and ignores the rest. Consequently, values that differ           only after the first           max_sort_length bytes compare           as equal for GROUP BY, ORDER           BY, and DISTINCT operations.         ** 1024 
 max_sp_recursion_depth **           The number of times that any given stored procedure may be           called recursively. The default value for this option is 0,           which completely disables recursion in stored procedures. The           maximum value is 255.         ** 0 
 max_user_connections **           The maximum number of simultaneous connections permitted to           any given MySQL user account. A value of 0 (the default) means            no limit.  ** 0 
 max_write_lock_count **           After this many write locks, permit some pending read lock           requests to be processed in between.         ** (64-bit platforms) 18446744073709551615 
 mecab_rc_file **           The mecab_rc_file option is used when           setting up the MeCab full-text parser.         **N/A
 metadata_locks_cache_size **           This system variable was removed in MySQL 8.0.13.         ** 1024 
 metadata_locks_hash_instances **           This system variable was removed in MySQL 8.0.13.         ** 8 
 min_examined_row_limit **           Queries that examine fewer than this number of rows are not           logged to the slow query log.         ** 0 
 multi_range_count **           This system variable was removed in MySQL 8.0.3.         ** 256 
 myisam_data_pointer_size **           The default pointer size in bytes, to be used by           CREATE TABLE for           MyISAM tables when no           MAX_ROWS option is specified. This variable           cannot be less than 2 or larger than 7. The default value is           6. See Section B.5.2.11,  The table is full .         ** 6 
 myisam_max_sort_file_size **           The maximum size of the temporary file that MySQL is permitted           to use while re-creating a MyISAM index           (during REPAIR TABLE,           ALTER TABLE, or           LOAD DATA           INFILE). If the file size would be larger than this           value, the index is created using the key cache instead, which           is slower. The value is given in bytes.         ** (64-bit platforms) 9223372036854775807 
 myisam_mmap_size **           The maximum amount of memory to use for memory mapping           compressed MyISAM files. If many           compressed MyISAM tables are used, the           value can be decreased to reduce the likelihood of           memory-swapping problems.         ** (64-bit platforms) 18446744073709551615 
 myisam_recover_options **           The value of the           --myisam-recover-options           option. See Section 5.1.6,  Server Command Options .         **N/A
 myisam_repair_threads **           If this value is greater than 1, MyISAM           table indexes are created in parallel (each index in its own           thread) during the Repair by sorting           process. The default value is 1. ** 1 
 myisam_sort_buffer_size **           The size of the buffer that is allocated when sorting           MyISAM indexes during a           REPAIR TABLE or when creating           indexes with CREATE INDEX or           ALTER TABLE.         ** 8388608 
 myisam_stats_method **nulls_equal** nulls_unequal 
 myisam_use_mmap **           Use memory mapping for reading and writing           MyISAM tables.         ** OFF 
 mysql_native_password_proxy_users **           This variable controls whether the           mysql_native_password built-in           authentication plugin supports proxy users. It has no effect           unless the check_proxy_users           system variable is enabled. For information about user           proxying, see Section 6.3.11,  Proxy Users .         ** OFF 
 named_pipe **           (Windows only.) Indicates whether the server supports           connections over named pipes.         ** OFF 
 net_buffer_length **           Each client thread is associated with a connection buffer and           result buffer. Both begin with a size given by           net_buffer_length but are           dynamically enlarged up to           max_allowed_packet bytes as           needed. The result buffer shrinks to           net_buffer_length after each           SQL statement.         ** 16384 
 net_read_timeout **           The number of seconds to wait for more data from a connection           before aborting the read. When the server is reading from the           client, net_read_timeout is           the timeout value controlling when to abort. When the server           is writing to the client,           net_write_timeout is the           timeout value controlling when to abort. See also           slave_net_timeout.         ** 30 
 net_retry_count **           If a read or write on a communication port is interrupted,           retry this many times before giving up. This value should be           set quite high on FreeBSD because internal interrupts are sent           to all threads.         ** 10 
 net_write_timeout **           The number of seconds to wait for a block to be written to a           connection before aborting the write. See also           net_read_timeout.         ** 60 
 new **           This variable was used in MySQL 4.0 to turn on some 4.1           behaviors, and is retained for backward compatibility. Its           value is always OFF.         ** FALSE 
 ngram_token_size **           Defines the n-gram token size for the n-gram full-text parser.           The ngram_token_size option is read-only           and can only be modified at startup. The default value is 2           (bigram). The maximum value is 10.         ** 2 
 offline_mode **           Whether the server is in  offline mode , which           has these characteristics: ** OFF 
 old ** old is a compatibility           variable. It is disabled by default, but can be enabled at           startup to revert the server to behaviors present in older           versions.         **N/A
 old_alter_table **           When this variable is enabled, the server does not use the           optimized method of processing an ALTER           TABLE operation. It reverts to using a temporary           table, copying over the data, and then renaming the temporary           table to the original, as used by MySQL 5.0 and earlier. For           more information on the operation of           ALTER TABLE, see           Section 13.1.8,  ALTER TABLE Syntax .         ** OFF 
 old_passwords **0** 0 
 open_files_limit **           The number of files that the operating system permits           mysqld to open. The value of this variable           at runtime is the real value permitted by the system and might           be different from the value you specify at server startup. The           value is 0 on systems where MySQL cannot change the number of           open files.         ** 5000, with possible adjustment 
 optimizer_prune_level **           Controls the heuristics applied during query optimization to           prune less-promising partial plans from the optimizer search           space. A value of 0 disables heuristics so that the optimizer           performs an exhaustive search. A value of 1 causes the           optimizer to prune plans based on the number of rows retrieved           by intermediate plans.         ** 1 
 optimizer_search_depth **           The maximum depth of search performed by the query optimizer.           Values larger than the number of relations in a query result           in better query plans, but take longer to generate an           execution plan for a query. Values smaller than the number of           relations in a query return an execution plan quicker, but the           resulting plan may be far from being optimal. If set to 0, the           system automatically picks a reasonable value.         ** 62 
 optimizer_switch **batched_key_access={on|off}**N/A
 optimizer_trace **           This variable controls optimizer tracing. For details, see           MySQL           Internals: Tracing the Optimizer.         **N/A
 optimizer_trace_features **           This variable enables or disables selected optimizer tracing           features. For details, see           MySQL           Internals: Tracing the Optimizer.         **N/A
 optimizer_trace_limit **           The maximum number of optimizer traces to display. For           details, see           MySQL           Internals: Tracing the Optimizer.         ** 1 
 optimizer_trace_max_mem_size **           The maximum cumulative size of stored optimizer traces. For           details, see           MySQL           Internals: Tracing the Optimizer.         ** (>= 8.0.4) 1048576 
 optimizer_trace_offset **           The offset of optimizer traces to display. For details, see           MySQL           Internals: Tracing the Optimizer.         ** -1 
 parser_max_mem_size **           The maximum amount of memory available to the parser. The           default value places no limit on memory available. The value           can be reduced to protect against out-of-memory situations           caused by parsing long or complex SQL statements.         ** (64-bit platforms) 18446744073709551615 
 password_history **           This variable defines the global policy for controlling reuse           of previous passwords based on required minimum number of           password changes. For an account password used previously,           this variable indicates the number of subsequent account           password changes that must occur before the password can be           reused. If the value is 0 (the default), there is no reuse           restriction based on number of password changes.         ** 0 
 password_require_current **           This variable defines the global policy for controlling           whether attempts to change an account password must specify           the current password to be replaced.         ** OFF 
 password_reuse_interval **           This variable defines the global policy for controlling reuse           of previous passwords based on time elapsed. For an account           password used previously, this variable indicates the number           of days that must pass before the password can be reused. If           the value is 0 (the default), there is no reuse restriction           based on time elapsed.         ** 0 
 persisted_globals_load **           Whether to load persisted configuration settings from the           mysqld-auto.cnf file in the data           directory. The server normally processes this file at startup           after all other option files (see           Section 4.2.7,  Using Option Files ). Disabling           persisted_globals_load causes           the server startup sequence to skip           mysqld-auto.cnf.         ** ON 
 pid_file **           The path name of the process ID file. This variable can be set           with the --pid-file option. The           server creates the file in the data directory unless an           absolute path name is given to specify a different directory.           If you specify the --pid-file           option, you must specify a value. If you do not specify the           --pid-file option, MySQL uses a           default value of           host_name.pid,           where host_name is the name of the           host machine.         **N/A
 plugin_dir **           The path name of the plugin directory.         ** BASEDIR/lib/plugin 
 port **           The number of the port on which the server listens for TCP/IP           connections. This variable can be set with the           --port option.         ** 3306 
 preload_buffer_size **           The size of the buffer that is allocated when preloading           indexes.         ** 32768 
 protocol_version **           The version of the client/server protocol used by the MySQL           server.         **N/A
 proxy_user **           If the current client is a proxy for another user, this           variable is the proxy user account name. Otherwise, this           variable is NULL. See           Section 6.3.11,  Proxy Users .         **N/A
 pseudo_slave_mode **           This variable is for internal server use.         **N/A
 pseudo_thread_id **           This variable is for internal server use.         **N/A
 query_alloc_block_size **           The allocation size of memory blocks that are allocated for           objects created during statement parsing and execution. If you           have problems with memory fragmentation, it might help to           increase this parameter.         ** 8192 
 query_cache_limit **           This system variable was removed in MySQL 8.0.3.         ** 1048576 
 query_cache_min_res_unit **           This system variable was removed in MySQL 8.0.3.         ** 4096 
 query_cache_size **           This system variable was removed in MySQL 8.0.3.         ** (64-bit platforms, >= 8.0.1) 0 
 query_cache_type **0** 0 
 query_cache_wlock_invalidate **           This system variable was removed in MySQL 8.0.3.         ** FALSE 
 query_prealloc_size **           The size of the persistent buffer used for statement parsing           and execution. This buffer is not freed between statements. If           you are running complex queries, a larger           query_prealloc_size value           might be helpful in improving performance, because it can           reduce the need for the server to perform memory allocation           during query execution operations.         ** 8192 
 rand_seed1 **           The rand_seed1 and           rand_seed2 variables exist as           session variables only, and can be set but not read. The           variables but not their values are shown in the           output of SHOW VARIABLES.         **N/A
 range_alloc_block_size **           The size of blocks that are allocated when doing range           optimization.         ** 4096 
 range_optimizer_max_mem_size **           The limit on memory consumption for the range optimizer. A           value of 0 means  no limit.  If an execution plan           considered by the optimizer uses the range access method but           the optimizer estimates that the amount of memory needed for           this method would exceed the limit, it abandons the plan and           considers other plans. For more information, see           Limiting Memory Use for Range Optimization.         ** 8388608 
 rbr_exec_mode **IDEMPOTENT** STRICT 
 read_buffer_size **           Each thread that does a sequential scan for a           MyISAM table allocates a buffer of this           size (in bytes) for each table it scans. If you do many           sequential scans, you might want to increase this value, which           defaults to 131072. The value of this variable should be a           multiple of 4KB. If it is set to a value that is not a           multiple of 4KB, its value will be rounded down to the nearest           multiple of 4KB.         ** 131072 
 read_only **           When the read_only system           variable is enabled, the server permits no client updates           except from users who have the           CONNECTION_ADMIN or           SUPER privilege. This variable           is disabled by default.         ** OFF 
 read_rnd_buffer_size **           This variable is used for reads from MyISAM           tables, and, for any storage engine, for Multi-Range Read           optimization.         ** 262144 
 regexp_stack_limit **           The maximum available memory in bytes for the internal stack           used for regular expression matching operations performed by           REGEXP_LIKE() and similar           functions (see Section 12.5.2,  Regular Expressions ).         ** 8000000 
 regexp_time_limit **           The time limit for regular expression matching operations           performed by REGEXP_LIKE() and           similar functions (see Section 12.5.2,  Regular Expressions ). This limit           is expressed as the maximum permitted number of steps           performed by the match engine, and thus affects execution time           only indirectly. Typically, it is on the order of           milliseconds.         ** 32 
 require_secure_transport **           Whether client connections to the server are required to use           some form of secure transport. When this variable is enabled,           the server permits only TCP/IP connections that use SSL, or           connections that use a socket file (on Unix) or shared memory           (on Windows). The server rejects nonsecure connection           attempts, which fail with an           ER_SECURE_TRANSPORT_REQUIRED           error.         ** OFF 
 resultset_metadata **FULL** FULL 
 schema_definition_cache **           Defines a limit for the number of schema definition objects,           both used and unused, that can be kept in the dictionary           object cache.         ** 256 
 secure_auth **           This system variable was removed in MySQL 8.0.3.         ** ON 
 secure_file_priv **empty string** platform specific 
 server_id **           Specifies the server ID. This variable is set by the           --server-id option. The           server_id system variable is set to 1 by           default. The server can be started with this default ID, but           when binary logging is enabled, an informational message is           issued if you did not specify a server ID explicitly using the           --server-id option.         ** (>= 8.0.3) 1 
 session_track_gtids **OFF** OFF 
 session_track_schema **           Controls whether the server tracks when the default schema           (database) is set within the current session and notifies the           client to make the schema name available.         ** ON 
 session_track_state_change **           Controls whether the server tracks changes to the state of the           current session and notifies the client when state changes           occur. Changes can be reported for these attributes of client           session state: ** OFF 
 session_track_system_variables **           Controls whether the server tracks assignments to session           system variables and notifies the client of the name and value           of each assigned variable. The variable value is a           comma-separated list of variables for which to track           assignments. By default, notification is enabled for           time_zone,           autocommit,           character_set_client,           character_set_results, and           character_set_connection.           (The latter three variables are those affected by           SET NAMES.)         ** time_zone, autocommit, character_set_client, character_set_results, character_set_connection 
 session_track_transaction_info **OFF** OFF 
 sha256_password_auto_generate_rsa_keys **           This variable is available if the server was compiled using           OpenSSL (see Section 6.4.4,  OpenSSL Versus wolfSSL ). The server uses           it to determine whether to autogenerate RSA private/public           key-pair files in the data directory if they do not already           exist.         ** ON 
 sha256_password_private_key_path **           This variable is available if MySQL was compiled using OpenSSL           (see Section 6.4.4,  OpenSSL Versus wolfSSL ). Its value is the path           name of the RSA private key file for the           sha256_password authentication plugin. If           the file is named as a relative path, it is interpreted           relative to the server data directory. The file must be in PEM           format. ** private_key.pem 
 sha256_password_proxy_users **           This variable controls whether the           sha256_password built-in authentication           plugin supports proxy users. It has no effect unless the           check_proxy_users system           variable is enabled. For information about user proxying, see           Section 6.3.11,  Proxy Users .         ** OFF 
 sha256_password_public_key_path **           This variable is available if MySQL was compiled using OpenSSL           (see Section 6.4.4,  OpenSSL Versus wolfSSL ). Its value is the path           name of the RSA public key file for the           sha256_password authentication plugin. If           the file is named as a relative path, it is interpreted           relative to the server data directory. The file must be in PEM           format. Because this file stores a public key, copies can be           freely distributed to client users. (Clients that explicitly           specify a public key when connecting to the server using RSA           password encryption must use the same public key as that used           by the server.)         ** public_key.pem 
 shared_memory **           (Windows only.) Whether the server permits shared-memory           connections.         ** FALSE 
 shared_memory_base_name **           (Windows only.) The name of shared memory to use for           shared-memory connections. This is useful when running           multiple MySQL instances on a single physical machine. The           default name is MYSQL. The name is case           sensitive.         ** MYSQL 
 show_compatibility_56 **           This variable was used in the transition period during which           system and status variable information in           INFORMATION_SCHEMA tables was moved to           Performance Schema tables. That transition period ended in           MySQL 8.0.1, at which time this variable was removed. For           advice on migrating away from the           INFORMATION_SCHEMA tables to the           Performance Schema tables, see           Migrating to Performance Schema System and Status Variable Tables.         ** OFF 
 show_create_table_verbosity ** SHOW CREATE TABLE normally does           not show the ROW_FORMAT table option if the           row format is the default format. Enabling this variable           causes SHOW CREATE TABLE to           display ROW_FORMAT regardless of whether it           is the default format.         **N/A
 show_old_temporals **           Whether SHOW CREATE TABLE           output includes comments to flag temporal columns found to be           in pre-5.6.4 format (TIME,           DATETIME, and           TIMESTAMP columns without           support for fractional seconds precision). This variable is           disabled by default. If enabled, SHOW           CREATE TABLE output looks like this:         ** OFF 
 skip_external_locking **           This is OFF if mysqld           uses external locking (system locking), ON           if external locking is disabled. This affects only           MyISAM table access.         ** ON 
 skip_name_resolve **           This variable is set from the value of the           --skip-name-resolve option. If           it is OFF, mysqld           resolves host names when checking client connections. If it is           ON, mysqld uses only IP           numbers; in this case, all Host column           values in the grant tables must be IP addresses or           localhost. See           Section 8.12.4.2,  DNS Lookup Optimization and the Host Cache .         ** OFF 
 skip_networking **           This is ON if the server permits only local           (non-TCP/IP) connections. On Unix, local connections use a           Unix socket file. On Windows, local connections use a named           pipe or shared memory. This variable can be set to           ON with the           --skip-networking option.         **N/A
 skip_show_database **           This prevents people from using the SHOW           DATABASES statement if they do not have the           SHOW DATABASES privilege. This           can improve security if you have concerns about users being           able to see databases belonging to other users. Its effect           depends on the SHOW DATABASES           privilege: If the variable value is ON, the           SHOW DATABASES statement is           permitted only to users who have the SHOW           DATABASES privilege, and the statement displays all           database names. If the value is OFF,           SHOW DATABASES is permitted to           all users, but displays the names of only those databases for           which the user has the SHOW           DATABASES or other privilege.           (Any global privilege is considered a           privilege for all databases.)         **N/A
 slow_launch_time **           If creating a thread takes longer than this many seconds, the           server increments the           Slow_launch_threads status           variable.         ** 2 
 slow_query_log **           Whether the slow query log is enabled. The value can be 0 (or           OFF) to disable the log or 1 (or           ON) to enable the log. The default value           depends on whether the           --slow_query_log option is           given. The destination for log output is controlled by the           log_output system variable;           if that value is NONE, no log entries are           written even if the log is enabled.         ** OFF 
 slow_query_log_file **           The name of the slow query log file. The default value is           host_name-slow.log,           but the initial value can be changed with the           --slow_query_log_file option.         ** host_name-slow.log 
 socket **           On Unix platforms, this variable is the name of the socket           file that is used for local client connections. The default is           /tmp/mysql.sock. (For some distribution           formats, the directory might be different, such as           /var/lib/mysql for RPMs.)         ** (Other) /tmp/mysql.sock 
 sort_buffer_size **           Each session that must perform a sort allocates a buffer of           this size. sort_buffer_size           is not specific to any storage engine and applies in a general           manner for optimization. At minimum the           sort_buffer_size value must           be large enough to accommodate fifteen tuples in the sort           buffer. Also, increasing the value of           max_sort_length may require           increasing the value of           sort_buffer_size. For more           information, see Section 8.2.1.14,  ORDER BY Optimization  ** 262144 
 sql_auto_is_null **           If this variable is enabled, then after a statement that           successfully inserts an automatically generated           AUTO_INCREMENT value, you can find that           value by issuing a statement of the following form:         ** OFF 
 sql_big_selects **           If set to OFF, MySQL aborts           SELECT statements that are           likely to take a very long time to execute (that is,           statements for which the optimizer estimates that the number           of examined rows exceeds the value of           max_join_size). This is           useful when an inadvisable WHERE statement           has been issued. The default value for a new connection is           ON, which permits all           SELECT statements.         ** ON 
 sql_buffer_result **           If enabled, sql_buffer_result           forces results from SELECT           statements to be put into temporary tables. This helps MySQL           free the table locks early and can be beneficial in cases           where it takes a long time to send results to the client. The           default value is OFF.         ** OFF 
 sql_log_off **OFF (enable logging)** OFF 
 sql_mode **ALLOW_INVALID_DATES** (>= 8.0.11) ONLY_FULL_GROUP_BY STRICT_TRANS_TABLES NO_ZERO_IN_DATE NO_ZERO_DATE ERROR_FOR_DIVISION_BY_ZERO NO_ENGINE_SUBSTITUTION 
 sql_notes **           If enabled (the default), warnings of Note           level increment warning_count and the           server records them. If disabled, Note           warnings do not increment           warning_count and the server           does not record them. mysqldump includes           output to disable this variable so that reloading the dump           file does not produce warnings for events that do not affect           the integrity of the reload operation.         ** ON 
 sql_quote_show_create **           If enabled (the default), the server quotes identifiers for           SHOW CREATE TABLE and           SHOW CREATE DATABASE           statements. If disabled, quoting is disabled. This option is           enabled by default so that replication works for identifiers           that require quoting. See Section 13.7.6.10,  SHOW CREATE TABLE Syntax ,           and Section 13.7.6.6,  SHOW CREATE DATABASE Syntax .         ** ON 
 sql_require_primary_key **           Whether statements that create new tables or alter the           structure of existing tables enforce the requirement that           tables have a primary key.         ** OFF 
 sql_safe_updates **           If enabled, MySQL aborts UPDATE           or DELETE statements that do           not use a key in the WHERE clause or a           LIMIT clause. (Specifically,           UPDATE statements must have a           WHERE clause that uses a key or a           LIMIT clause, or both.           DELETE statements must have           both.) This makes it possible to catch           UPDATE or           DELETE statements where keys           are not used properly and that would probably change or delete           a large number of rows. The default value is           OFF.         ** OFF 
 sql_select_limit **           The maximum number of rows to return from           SELECT statements. The default           value for a new connection is the maximum number of rows that           the server permits per table. Typical default values are           (232) 1 or           (264) 1. If you have changed           the limit, the default value can be restored by assigning a           value of DEFAULT.         **N/A
 sql_warnings **           This variable controls whether single-row           INSERT statements produce an           information string if warnings occur. The default is           OFF. Set the value to ON           to produce an information string.         ** OFF 
 ssl_ca **           The path to a file with a list of trusted SSL Certificate           Authorities.         **N/A
 ssl_capath **           The path to a directory that contains trusted SSL CA           certificates in PEM format.         **N/A
 ssl_cert **           The name of the SSL certificate file to use for establishing a           secure connection.         **N/A
 ssl_cipher **           The list of permitted ciphers for SSL encryption.         **N/A
 ssl_crl **           The path to a file containing certificate revocation lists in           PEM format. Revocation lists work for MySQL distributions           compiled using OpenSSL (but not wolfSSL). See           Section 6.4.4,  OpenSSL Versus wolfSSL .         **N/A
 ssl_crlpath **           The path to a directory that contains files containing           certificate revocation lists in PEM format. Revocation lists           work for MySQL distributions compiled using OpenSSL (but not           wolfSSL). See Section 6.4.4,  OpenSSL Versus wolfSSL .         **N/A
 ssl_fips_mode **OFF (or 0)** OFF 
 ssl_key **           The name of the SSL key file to use for establishing a secure           connection.         **N/A
 stored_program_cache **           Sets a soft upper limit for the number of cached stored           routines per connection. The value of this variable is           specified in terms of the number of stored routines held in           each of the two caches maintained by the MySQL Server for,           respectively, stored procedures and stored functions.         ** 256 
 stored_program_definition_cache **           Defines a limit for the number of stored program definition           objects, both used and unused, that can be kept in the           dictionary object cache.         ** 256 
 super_read_only **           If the read_only system           variable is enabled, the server permits client updates only           from users who have the SUPER           privilege. If the           super_read_only system           variable is also enabled, the server prohibits client updates           even from users who have SUPER.           See the description of the           read_only system variable for           a description of read-only mode and information about how           read_only and           super_read_only interact.         ** OFF 
 syseventlog.facility **           The facility for error log output written to           syslog (what type of program is sending the           message). This variable is unavailable unless the           log_sink_syseventlog error log component is           installed. See Section 5.4.2.3,  Error Logging to the System Log .         ** daemon 
 syseventlog.include_pid **           Whether to include the server process ID in each line of error           log output written to syslog. This variable           is unavailable unless the           log_sink_syseventlog error log component is           installed. See Section 5.4.2.3,  Error Logging to the System Log .         ** ON 
 syseventlog.tag **           The tag to be added to the server identifier in error log           output written to syslog. This variable is           unavailable unless the log_sink_syseventlog           error log component is installed. See           Section 5.4.2.3,  Error Logging to the System Log .         ** empty string 
 system_time_zone **           The server system time zone. When the server begins executing,           it inherits a time zone setting from the machine defaults,           possibly modified by the environment of the account used for           running the server or the startup script. The value is used to           set system_time_zone.           Typically the time zone is specified by the           TZ environment variable. It also can be           specified using the           --timezone option of the           mysqld_safe script.         **N/A
 table_definition_cache **           The number of table definitions that can be stored in the           definition cache. If you use a large number of tables, you can           create a large table definition cache to speed up opening of           tables. The table definition cache takes less space and does           not use file descriptors, unlike the normal table cache. The           minimum value is 400. The default value is based on the           following formula, capped to a limit of 2000:         ** -1 (signifies autosizing; do not assign this literal value) 
 table_open_cache **           The number of open tables for all threads. Increasing this           value increases the number of file descriptors that           mysqld requires. You can check whether you           need to increase the table cache by checking the           Opened_tables status           variable. See Section 5.1.9,  Server Status Variables . If           the value of Opened_tables           is large and you do not use FLUSH           TABLES often (which just forces all tables to be           closed and reopened), then you should increase the value of           the table_open_cache           variable. For more information about the table cache, see           Section 8.4.3.1,  How MySQL Opens and Closes Tables .         ** (>= 8.0.4) 4000 
 table_open_cache_instances **           The number of open tables cache instances. To improve           scalability by reducing contention among sessions, the open           tables cache can be partitioned into several smaller cache           instances of size           table_open_cache /           table_open_cache_instances .           A session needs to lock only one instance to access it for DML           statements. This segments cache access among instances,           permitting higher performance for operations that use the           cache when there are many sessions accessing tables. (DDL           statements still require a lock on the entire cache, but such           statements are much less frequent than DML statements.)         ** 16 
 temptable_max_ram **           Defines the maximum amount of memory that can be occupied by           the TempTable storage engine before it           starts storing data on disk. The default value is 1073741824           bytes (1GiB). For more information, see           Section 8.4.4,  Internal Temporary Table Use in MySQL .         ** 1073741824 
 thread_cache_size **           How many threads the server should cache for reuse. When a           client disconnects, the client's threads are put in the cache           if there are fewer than           thread_cache_size threads           there. Requests for threads are satisfied by reusing threads           taken from the cache if possible, and only when the cache is           empty is a new thread created. This variable can be increased           to improve performance if you have a lot of new connections.           Normally, this does not provide a notable performance           improvement if you have a good thread implementation. However,           if your server sees hundreds of connections per second you           should normally set           thread_cache_size high enough           so that most new connections use cached threads. By examining           the difference between the           Connections and           Threads_created status           variables, you can see how efficient the thread cache is. For           details, see Section 5.1.9,  Server Status Variables .         ** -1 (signifies autosizing; do not assign this literal value) 
 thread_handling **no-threads** one-thread-per-connection 
 thread_pool_algorithm **           This variable controls which algorithm the thread pool plugin           uses: ** 0 
 thread_pool_high_priority_connection **           This variable affects queuing of new statements prior to           execution. If the value is 0 (false, the default), statement           queuing uses both the low-priority and high-priority queues.           If the value is 1 (true), queued statements always go to the           high-priority queue.         ** 0 
 thread_pool_max_unused_threads **           The maximum permitted number of unused threads in the thread           pool. This variable makes it possible to limit the amount of           memory used by sleeping threads.         ** 0 
 thread_pool_prio_kickup_timer **           This variable affects statements waiting for execution in the           low-priority queue. The value is the number of milliseconds           before a waiting statement is moved to the high-priority           queue. The default is 1000 (1 second). The range of values is           0 to 232   2.         ** 1000 
 thread_pool_size **           The number of thread groups in the thread pool. This is the           most important parameter controlling thread pool performance.           It affects how many statements can execute simultaneously. The           default value is 16, with a range from 1 to 64 of permissible           values. If a value outside this range is specified, the thread           pool plugin does not load and the server writes a message to           the error log.         ** 16 
 thread_pool_stall_limit **           This variable affects executing statements. The value is the           amount of time a statement has to finish after starting to           execute before it becomes defined as stalled, at which point           the thread pool permits the thread group to begin executing           another statement. The value is measured in 10 millisecond           units, so a value of 6 (the default) means 60ms. The range of           values is 4 to 600 (40ms to 6s). Short wait values permit           threads to start more quickly. Short values are also better           for avoiding deadlock situations. Long wait values are useful           for workloads that include long-running statements, to avoid           starting too many new statements while the current ones           execute.         ** 6 
 thread_stack **           The stack size for each thread. The default of 192KB (256KB           for 64-bit systems) is large enough for normal operation. If           the thread stack size is too small, it limits the complexity           of the SQL statements that the server can handle, the           recursion depth of stored procedures, and other           memory-consuming actions.         ** (64-bit platforms) 262144 
 time_zone **           The current time zone. This variable is used to initialize the           time zone for each client that connects. By default, the           initial value of this is 'SYSTEM' (which           means,  use the value of           system_time_zone ).           The value can be specified explicitly at server startup with           the --default-time-zone option.           See Section 5.1.12,  MySQL Server Time Zone Support . **N/A
 timestamp **           Set the time for this client. This is used to get the original           timestamp if you use the binary log to restore rows.           timestamp_value should be a Unix           epoch timestamp (a value like that returned by           UNIX_TIMESTAMP(), not a value           in 'YYYY-MM-DD hh:mm:ss' format) or           DEFAULT.         **N/A
 tls_version **TLSv1,TLSv1.1,TLSv1.2 (OpenSSL)** (>= 8.0.11) TLSv1,TLSv1.1,TLSv1.2 
 tmp_table_size **           The maximum size of internal in-memory temporary tables. This           variable does not apply to user-created           MEMORY tables.         ** 16777216 
 tmpdir **           The directory used for temporary files and temporary tables.           This variable can be set to a list of several paths that are           used in round-robin fashion. Paths should be separated by           colon characters (:) on Unix and semicolon           characters (;) on Windows.         **N/A
 transaction_alloc_block_size **           The amount in bytes by which to increase a per-transaction           memory pool which needs memory. See the description of           transaction_prealloc_size.         ** 8192 
 transaction_isolation **READ-UNCOMMITTED** REPEATABLE-READ 
 transaction_prealloc_size **           There is a per-transaction memory pool from which various           transaction-related allocations take memory. The initial size           of the pool in bytes is           transaction_prealloc_size.           For every allocation that cannot be satisfied from the pool           because it has insufficient memory available, the pool is           increased by           transaction_alloc_block_size           bytes. When the transaction ends, the pool is truncated to           transaction_prealloc_size           bytes.         ** 4096 
 transaction_read_only **           The default transaction access mode. The value can be           OFF (read/write, the default) or           ON (read only).         ** OFF 
 tx_isolation **READ-UNCOMMITTED** REPEATABLE-READ 
 tx_read_only **           This system variable was removed in MySQL 8.0.3. Use           transaction_read_only           instead.         ** OFF 
 unique_checks **           If set to 1 (the default), uniqueness checks for secondary           indexes in InnoDB tables are performed. If           set to 0, storage engines are permitted to assume that           duplicate keys are not present in input data. If you know for           certain that your data does not contain uniqueness violations,           you can set this to 0 to speed up large table imports to           InnoDB.         ** ON 
 updatable_views_with_limit **           This variable controls whether updates to a view can be made           when the view does not contain all columns of the primary key           defined in the underlying table, if the update statement           contains a LIMIT clause. (Such updates           often are generated by GUI tools.) An update is an           UPDATE or           DELETE statement. Primary key           here means a PRIMARY KEY, or a           UNIQUE index in which no column can contain           NULL.         ** 1 
 use_secondary_engine **OFF** OFF 
 validate_user_plugins **           If this variable is enabled (the default), the server checks           each user account and produces a warning if conditions are           found that would make the account unusable: ** ON 
 version_comment **           The CMake configuration program has a           COMPILATION_COMMENT option that           permits a comment to be specified when building MySQL. This           variable contains the value of that comment. See           Section 2.8.4,  MySQL Source-Configuration Options .         **N/A
 version_compile_machine **           The type of the server binary.         **N/A
 version_compile_os **           The type of operating system on which MySQL was built.         **N/A
 version_compile_zlib **           The version of the compiled-in zlib           library.         **N/A
 wait_timeout **           The number of seconds the server waits for activity on a           noninteractive connection before closing it.         ** 28800 
 windowing_use_high_precision **           Whether to compute window operations without loss of           precision. See Section 8.2.1.19,  Window Function Optimization . ** ON 
